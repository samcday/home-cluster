---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: mimir
  namespace: mimir
spec:
  chart:
    spec:
      chart: mimir-distributed
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      version: 5.6.0
  driftDetection:
    mode: enabled
  interval: 1h
  values:
    # https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml
    alertmanager:
      enabled: false
    compactor:
      persistentVolume: &hostpathvol
        storageClass: openebs-hostpath
    distributor:
      replicas: 3
      topologySpreadConstraints: &topo
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
    global:
      clusterDomain: home-cluster.local.
    ingester:
      persistentVolume: *hostpathvol
      replicas: 3
      topologySpreadConstraints: *topo
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "300s"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "300s"
      hosts: [mimir.samcday.com]
      ingressClassName: nginx
      tls:
        - hosts: [mimir.samcday.com]
          secretName: tls
    metaMonitoring:
      dashboards:
        enabled: true
      serviceMonitor:
        enabled: true
      prometheusRule:
        enabled: true
        mimirAlerts: true
        mimirRules: true
    mimir:
      structuredConfig:
        common:
          storage:
            backend: s3
            s3:
              endpoint: obj.samcday.com:443
        distributor:
          ha_tracker:
            enable_ha_tracker: true
            kvstore:
              store: etcd
              prefix: mimir/ha-tracker/
              etcd:
                endpoints: [etcd.etcd.svc.home-cluster.local.:2379]
        limits:
          accept_ha_samples: true
          compactor_block_upload_enabled: true
          max_global_series_per_user: 0
        multitenancy_enabled: false
    minio:
      enabled: false
    nginx:
      enabled: false
    query_frontend:
      replicas: 3
      topologySpreadConstraints: *topo
    query_scheduler:
      topologySpreadConstraints: *topo
    ruler:
      remoteEvaluationDedicatedQueryPath: true
    ruler_querier:
      topologySpreadConstraints: *topo
    ruler_query_scheduler:
      topologySpreadConstraints: *topo
    runtimeConfig:
      distributor_limits:
        max_ingestion_rate: 50000
      ingester_limits:
        max_ingestion_rate: 50000
        max_series: 1000000
      overrides:
        anonymous:
          ingestion_rate: 50000
    store_gateway:
      persistentVolume: *hostpathvol
      topologySpreadConstraints: *topo
  valuesFrom:
    - kind: Secret
      name: blocks-bucket
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: mimir.structuredConfig.blocks_storage.s3.access_key_id
    - kind: Secret
      name: blocks-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: mimir.structuredConfig.blocks_storage.s3.secret_access_key
    - kind: ConfigMap
      name: blocks-bucket
      valuesKey: BUCKET_NAME
      targetPath: mimir.structuredConfig.blocks_storage.s3.bucket_name
    - kind: Secret
      name: ruler-bucket
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: mimir.structuredConfig.ruler_storage.s3.access_key_id
    - kind: Secret
      name: ruler-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: mimir.structuredConfig.ruler_storage.s3.secret_access_key
    - kind: ConfigMap
      name: ruler-bucket
      valuesKey: BUCKET_NAME
      targetPath: mimir.structuredConfig.ruler_storage.s3.bucket_name
