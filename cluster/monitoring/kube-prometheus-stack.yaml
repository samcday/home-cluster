---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 69.7.1
  dependsOn:
    - name: prom-operator-crds
  install:
    remediation:
      retries: -1
  interval: 1h
  releaseName: kube-prometheus-stack
  upgrade:
    remediation:
      retries: -1
  values:
    # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    alertmanager:
      alertmanagerSpec:
        alertmanagerConfigMatcherStrategy:
          type: None
        externalUrl: https://alertmanager.samcday.com:9093
        replicas: 3
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts: [alertmanager.samcday.com]
        ingressClassName: nginx
        tls:
          - hosts: [alertmanager.samcday.com]
            secretName: alertmanager-certificate
    defaultRules:
      disabled:
        KubeClientCertificateExpiration: true
        # See targetdown-fixed PrometheusRule
        # TargetDown: true
    grafana:
      enabled: false
      forceDeployDatasources: true
      sidecar:
        datasources:
          isDefaultDatasource: false
    kubeApiServer:
      serviceMonitor:
        relabelings:
          - replacement: home
            targetLabel: cluster
    kubeControllerManager:
      serviceMonitor:
        relabelings:
          - replacement: home
            targetLabel: cluster
    # Using Cilium kube-proxy replacement
    kubeProxy:
      enabled: false
    kubeScheduler:
      serviceMonitor:
        relabelings:
          - replacement: home
            targetLabel: cluster
    prometheus:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        hosts: [prometheus.samcday.com]
        ingressClassName: nginx
        tls:
          - hosts: [prometheus.samcday.com]
            secretName: prometheus-certificate
      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: node-exporter
            static_configs:
              - targets:
                  - 10.0.1.1:9100
                labels:
                  instance: home-cluster-router
        enableAdminAPI: true
        externalLabels:
          cluster: home
        externalUrl: https://prometheus.samcday.com
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        remoteWrite:
          - url: https://mimir.samcday.com/api/v1/push
            queueConfig:
              # default is 50, which gets spicy if upstream is down for a while and this
              # Prom wants to catch up on a backlog.
              max_shards: 4
        replicaExternalLabelName: __replica__
        replicas: 2
        resources:
          requests:
            memory: 4Gi
        retention: 1d
        retentionSize: 1GB
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
    # https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-node-exporter/values.yaml
    prometheus-node-exporter:
      extraArgs:
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
      hostRootFsMount:
        enabled: false
      prometheus:
        monitor:
          relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            targetLabel: instance
            replacement: $1
            action: replace
    prometheusOperator:
      enabled: false
