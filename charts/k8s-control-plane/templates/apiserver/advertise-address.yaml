{{- if not $.Values.externalIP -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: advertise-address 
spec:
  template:
    spec:
      containers:
        - name: advertise-address
          image: {{ include "k8s-control-plane.kubectl-image" $ }}
          command:
            - bash
            - -uexo
            - pipefail
            - -c
            - |
              ip=$(kubectl get svc apiserver -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              kubectl create configmap advertise-address --from-literal=value="$ip" --dry-run=client --output yaml \
                | kubectl apply -f-
              kubectl patch cert apiserver --type merge -p "{\"spec\":{\"ipAddresses\":[\"$ip\",\"{{ $.Values.serviceIP }}\"]}}"
      serviceAccount: advertise-address
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 60
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: advertise-address
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: advertise-address
rules:
- apiGroups: [""]
  resources: [configmaps]
  verbs: [create]
- apiGroups: [""]
  resourceNames: [advertise-address]
  resources: [configmaps]
  verbs: [get, update, patch]
- apiGroups: [""]
  resourceNames: [apiserver]
  resources: [services]
  verbs: [get]
- apiGroups: [cert-manager.io]
  resourceNames: [apiserver]
  resources: [certificates]
  verbs: [get, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: advertise-address
subjects:
  - kind: ServiceAccount
    name: advertise-address
roleRef:
  kind: Role
  name: advertise-address
  apiGroup: rbac.authorization.k8s.io
{{ end }}
