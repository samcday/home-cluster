apiServer:
  image:
    repository: registry.k8s.io/kube-apiserver
    pullPolicy: IfNotPresent
    tag: "v{{ $.Values.version }}"
  replicas: 2
  service:
    annotations:
    labels:
    # Set everything allowed in ServiceSpec here
    # Do not set a selector or add the apiserver 6443 port, that's handled by the chart.
    spec:
      type: ClusterIP

clusterDomain: cluster.local

controllerManager:
  image:
    repository: registry.k8s.io/kube-controller-manager
    pullPolicy: IfNotPresent
    tag: "v{{ $.Values.version }}"
  replicas: 2

etcd:
  endpoints: []
  # It's assumed that this control plane is using a multi-tenanted etcd cluster with RBAC enabled,
  # and thus the compaction API is not permitted.
  compactionInterval: "0"
  prefix: "/{{ $.Release.Name }}/"

scheduler:
  image:
    repository: registry.k8s.io/kube-scheduler
    pullPolicy: IfNotPresent
    tag: "v{{ $.Values.version }}"
  replicas: 2

version: 1.30.2


# # Default values for k8s-control-plane.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# 


# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}
